//*************************************************//
//***************** MIXIN BASE ********************//
//*************************************************//


// GRID BASIC STYLES

@mixin GridBasic($padding) {
 .container-fluid, .container {
    min-width: 320px;
    margin-right: auto;
    margin-left: auto;
  }
  .container-fluid {
    padding-right: $padding;
    padding-left: $padding;
  }
  .row {
    box-sizing: border-box;
    display: -webkit-box;
    display: -webkit-flex;
    display: -moz-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-flex: 0;
    -webkit-flex: 0 1 auto;
    -moz-box-flex: 0;
    -ms-flex: 0 1 auto;
    flex: 0 1 auto;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -webkit-flex-direction: row;
    -moz-box-orient: horizontal;
    -moz-box-direction: normal;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    margin-right: -#{$padding/2};
    margin-left: -#{$padding/2};
    &.reverse {
      -webkit-box-orient: horizontal;
      -webkit-box-direction: reverse;
      -ms-flex-direction: row-reverse;
      flex-direction: row-reverse;
     }
  }
  [class*="col-"]{
    box-sizing: border-box;
    -webkit-box-flex: 0;
    -ms-flex: 0 0 auto;
    flex: 0 0 auto;
    padding-right: #{$padding/2};
    padding-left: #{$padding/2};
  }
  .col.reverse {
    -webkit-box-orient: vertical;
    -webkit-box-direction: reverse;
    -ms-flex-direction: column-reverse;
    flex-direction: column-reverse;
  }
}


// GRID ALIGN-ITEMS

@mixin Aligner($dev) {
  .top-#{$dev}{
    -webkit-box-align: start;
    -webkit-align-items: flex-start;
    -moz-box-align: start;
    -ms-flex-align: start;
    align-items: flex-start;
  }
  .middle-#{$dev}{
    -webkit-box-align: center;
    -webkit-align-items: center;
    -moz-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }
  .bottom-#{$dev}{
    -webkit-box-align: end;
    -webkit-align-items: flex-end;
    -moz-box-align: end;
    -ms-flex-align: end;
    align-items: flex-end;
  }
  .stretch-#{$dev}{
    -webkit-box-align: stretch;
    -webkit-align-items: stretch;
    -moz-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}


// GRID JUSTIFY-CONTENT

@mixin Justifyer($dev) {
  .start-#{$dev}{
    -webkit-box-pack: start;
    -webkit-justify-content: flex-start;
    -moz-box-pack: start;
    -ms-flex-pack: start;
    justify-content: flex-start;
  }
  .center-#{$dev}{
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -moz-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
  }
  .end-#{$dev}{
    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
    -moz-box-pack: end;
    -ms-flex-pack: end;
    justify-content: flex-end;
  }
  .around-#{$dev}{
    -webkit-justify-content: space-around;
    -ms-flex-pack: distribute;
    justify-content: space-around;
  }
  .between-#{$dev}{
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    -moz-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
}


// GRID ORDER

@mixin Orderer($dev){
  .first-#{$dev} {
    -webkit-box-ordinal-group: 0;
    -ms-flex-order: -1;
    order: -1;
  }
  .last-#{$dev} {
    -webkit-box-ordinal-group: 2;
    -ms-flex-order: 1;
    order: 1;
  }
}


// HIDE AND SHOW ELEMENTS

@mixin Hider($dev){
  .hide-#{$dev} {
    display: none;
  }
}
@mixin Shower($dev){
  .show-#{$dev} {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }
}


// GRID MAKER

@mixin MakeGrid($device, $cols) {
  @include Orderer($device);
  @include Aligner($device);
  @include Justifyer($device);
  @include Hider($device);
  @include Shower($device);
  @for $c from 1 through $cols {
    .col-#{$device}-#{$c} {
      width: #{100%/$cols*$c};
      max-width: #{100%/$cols*$c}
    }
    .col-#{$device}-offset-#{$c} {
      margin-left: #{100%/$cols*$c}
    }

  }
}


// MAKE GRID FOR EACH RESOLUTION

@mixin MediaGrid($min, $max, $dev, $cols){
  @media only screen and (min-width: #{$min}px) {
    .container-fluid{
      max-width: #{$max}px;
    }
    @include MakeGrid ($dev, $cols)
  }
}


// МИКСИНЫ ДЛЯ СОКРАЩЕНИЯ МЕДИА-ЗАПРОСОВ

@mixin sm {
  @media only screen and (min-width: 480px) {
    @content;
  }
}

@mixin md {
  @media only screen and (min-width: 768px) {
    @content;
  }
}

@mixin lg {
  @media only screen and (min-width: 1024px) {
    @content;
  }
}

//*************************************************//
//*************** MAKE SOME GRID ******************//
//*************************************************//

@include GridBasic (20px);
//
@include MediaGrid(0, 479, xs, 12);
@include MediaGrid(480, 819, sm, 12);
@include MediaGrid(820, 1023, md, 12);
@include MediaGrid(1024, 1440, lg, 12);
